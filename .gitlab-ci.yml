services:
  - docker:19.03.1-dind


variables:
  ARTIFACT_NAME: "whatsapp-manager"
  DOCKER_HOST: tcp://docker:2375

.docker-setup:
  before_script:
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

.kaniko-setup:
  before_script:
    - echo "{\"auths\":{\"https://index.docker.io/v1/\":{\"auth\":\"$(printf "%s:%s" "${DOCKER_USERNAME}" "${DOCKER_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json

stages:
  - build
  - deploy

merge-build:
  extends: .kaniko-setup
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor --context "${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/Dockerfile" --destination "eziotobioli/whatsapp-manager:mr-$CI_MERGE_REQUEST_IID"
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  tags:
    - k8s-fizzy

prod-build:
  extends: .kaniko-setup
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor --context "${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/Dockerfile" --destination "eziotobioli/whatsapp-manager:mr-$CI_MERGE_REQUEST_IID"
  only:
    - tags
  tags:
    - k8s-fizzy


merge-deploy:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    - kubectl config use-context fizzy_soft/whatsapp-manager:fizzy
    - TAG=mr-$CI_MERGE_REQUEST_IID
    - sed -i "s/#{IMAGE_TAG}/$TAG/g" k8s/deployment.yaml
    - kubectl apply -f k8s/deployment.yaml
    - kubectl apply -f k8s/service.yaml
    - kubectl apply -f k8s/ingress.yaml
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'


merge-deploy-manual:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    - kubectl config use-context fizzy_soft/whatsapp-manager:fizzy
    - TAG=mr-$CI_MERGE_REQUEST_IID
    - sed -i "s/#{IMAGE_TAG}/$TAG/g" k8s/deployment.yaml
    - kubectl apply -f k8s/deployment.yaml
    - kubectl apply -f k8s/service.yaml
    - kubectl apply -f k8s/ingress.yaml
  when: manual